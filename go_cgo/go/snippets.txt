
// IMAGICK_1:START OMIT
package imagick // import "gopkg.in/gographics/imagick.v3/imagick"

// #cgo !no_pkgconfig pkg-config: MagickWand MagickCore
// #include <MagickWand/MagickWand.h>
import "C"

type MagickWand struct { mw *C.MagickWand }

func NewMagickWand() *MagickWand {
	return newMagickWand(C.NewMagickWand())
}

func (mw *MagickWand) ResizeImage(cols, rows uint, filter FilterType) error {
	ok := C.MagickResizeImage(mw.mw, C.size_t(cols), C.size_t(rows), C.FilterType(filter))
	return mw.getLastErrorIfFailed(ok)
}

func (mw *MagickWand) getLastErrorIfFailed(ok C.MagickBooleanType) error {
	if C.int(ok) == 0 {
		return mw.GetLastError()
	} else {
		return nil
	}
}
// IMAGICK_1:END OMIT

// IMAGICK_2:START OMIT
func (mw *MagickWand) GetLastError() error {
	var et C.ExceptionType
	csdescription := C.MagickGetException(mw.mw, &et)
	
	// Clean up our memory!
	defer relinquishMemory(unsafe.Pointer(csdescription))
	
	if ExceptionType(et) != EXCEPTION_UNDEFINED {
		mw.clearException()
		return &MagickWandException{ExceptionType(C.int(et)), C.GoString(csdescription)}
	}
	
	// Prevent Go runtime from garbage collecting parameters 
	// that are still in use by C calls before this point
	runtime.KeepAlive(mw)
	
	return nil
}
// IMAGICK_2:END OMIT

